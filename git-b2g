#!/usr/bin/env bash

# Requires SSH authentication to Bitbucket with authorised public key
# Requires SSH authentication to GitHub using >> gh auth login
# Requires GitHub CLI (gh) installed for repository creation

# --- CONFIGURATION ---
BITBUCKET_USER="bacreative"
GITHUB_USER="BA-Creative"
# ----------------------

# Check if GitHub CLI is installed, install if not
if ! command -v gh &> /dev/null; then
  echo "GitHub CLI not found. Installing using Homebrew..."
  
  # Check if Homebrew is installed
  if ! command -v brew &> /dev/null; then
    echo "Error: Homebrew is not installed. Please install Homebrew first:"
    echo "Visit: https://brew.sh/"
    exit 1
  fi
  
  # Install GitHub CLI using Homebrew
  brew install gh || { echo "Error: Failed to install GitHub CLI."; exit 1; }
  
  echo "GitHub CLI installed successfully!"
  echo "Please run 'gh auth login' to authenticate with GitHub before running this script again."
  exit 0
else
  echo "GitHub CLI is already installed."
fi

# Check if a repo name was provided
if [ -z "$1" ]; then
  echo "Error: No repository name provided."
  exit 1
fi

SRC_REPO="$1"
DEST_REPO="${2:-$SRC_REPO}"

echo "Migrating: $SRC_REPO -> $DEST_REPO"

# Check if the destination directory already exists
if [ -d "$SRC_REPO.git" ]; then
  echo "$SRC_REPO.git exists, skipping Bitbucket clone."
  cd "$SRC_REPO.git" || exit 1
else
  git clone --mirror "git@bitbucket.org:$BITBUCKET_USER/$SRC_REPO.git" || { echo "Error: Clone failed."; exit 1; }
  cd "$SRC_REPO.git" || exit 1
fi

# Set GitHub as the new remote via SSH
git remote set-url origin "git@github.com:$GITHUB_USER/$DEST_REPO.git"

# Test SSH connection to GitHub
ssh -T git@github.com 2>&1 | grep -q "successfully authenticated"

# Check if GitHub repository exists by attempting to fetch
git ls-remote origin &> /dev/null
if [ $? -ne 0 ]; then
  if command -v gh &> /dev/null; then
    gh repo create "$GITHUB_USER/$DEST_REPO" --private --confirm || { echo "Error: gh repo create failed."; exit 1; }
  else
    echo "Error: GitHub repo does not exist and gh not installed."; exit 1
  fi
fi

# Push everything to GitHub
git push --mirror || { echo "Error: Push failed."; exit 1; }
cd ..
rm -rf "$SRC_REPO.git"
echo "Done: $SRC_REPO -> $DEST_REPO"
